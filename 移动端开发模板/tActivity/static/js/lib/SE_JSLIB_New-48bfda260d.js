window.__UID__ = "cdwk1";
window.__PRJ__ = "http://b.map.icttic.cn:81";
window.EV = window.EV || {}; EV.ServiceConstants = EV.ServiceConstants || {}; EV.ServiceConstants.NUBMER_TO_LNGLAT = 100000; EV.ServiceConstants.TIME_INTERVAL_LS = 100; EV.ServiceConstants.TIME_INTERVAL_RC = 200; EV.ServiceConstants.RC_MAX_WAY_POINTS_NUMBER = 16; EV.ServiceConstants.SERVICE_CONTEXT_URL = ""; EV.ServiceConstants.IMG_URL = window.__PRJ__; EV.ServiceConstants.Urls = EV.ServiceConstants.Urls || {}; EV.ServiceConstants.Urls.sh = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_SH"; EV.ServiceConstants.Urls.gc = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_GC"; EV.ServiceConstants.Urls.rgc = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_RGC2"; EV.ServiceConstants.Urls.ls = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_LS"; EV.ServiceConstants.Urls.rc = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_RC"; EV.ServiceConstants.Urls.ip = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_IP"; EV.ServiceConstants.Urls.rac = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_RAC"; EV.ServiceConstants.Urls.weather = EV.ServiceConstants.SERVICE_CONTEXT_URL + "/SE_Weather"; EV.ServiceUtils = EV.ServiceUtils || {}; EV.ServiceUtils.isEmpty = function (a) { return "" == (a || "").replace(/^(\s|\u00A0)+|(\s|\u00A0)+$/g, "") }; EV.ServiceUtils.isNumber = function (a) { return !isNaN(a) && parseInt(a) }; EV.ServiceUtils.isIE6 = function () { var a = !1; document.all && "6.0" == navigator.userAgent.toLowerCase().match(/msie ([\d.]+)/)[1] && (a = !0); return a }; EV.ServiceUtils.filterPNG = function (a) { if (EV.ServiceUtils.isIE6()) { for (var d = document.getElementsByTagName("IMG"), b, c = 0; c < d.length; c++) { b = d[c], b.className == a && -1 == b.src.indexOf("blank.gif") && EV.ServiceUtils.handleFilterPNG(b) } } }; EV.ServiceUtils.handleFilterPNG = function (a) { -1 == a.src.indexOf("blank.gif") && (a.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + a.src + "')", a.style.overflow = "hidden", a.src = EV.ServiceConstants.IMG_URL + "/img/service/iepngfix/blank.gif") }; EV.ServiceUtils.ajaxRequest = function (a) { try { var d = document.getElementsByTagName("head")[0]; d || (d = document.documentElement); var b = document.createElement("script"); b.src = a; d.appendChild(b); b.onload = b.onreadystatechange = function () { if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") { b.onload = b.onreadystatechange = null; d && b.parentNode && d.removeChild(b) } } } catch (c) { } }; window._SESHR_ = {}; window._SESHR_.nameGeneratorIndex = 0; window._SESHR_.nameGeneratorDigit = 1; window._SESHR_._HADUSEDNAMES_ = {}; EV.ServiceUtils.getGeneratorAJAXRequestName = function () { for (var a = "", d = window._SESHR_.nameGeneratorIndex, b = window._SESHR_.nameGeneratorDigit; ;) { for (var c = 0; c < b; c++) { var e = 0 == c ? "qwertyuiopasdfghjklzxcvbnm_QWERTYUIOPASDFGHJKLZXCVBNM" : "qwertyuiopasdfghjklzxcvbnm_QWERTYUIOPASDFGHJKLZXCVBNM0123456789", f = d % e.length, d = (d - f) / e.length, a = a + e.charAt(f) } if (!window._SESHR_._HADUSEDNAMES_[a]) { break } window._SESHR_.nameGeneratorIndex++; window._SESHR_.nameGeneratorIndex >= 53 * Math.pow(63, window._SESHR_.nameGeneratorDigit - 1) && (window._SESHR_.nameGeneratorIndex = 0, window._SESHR_.nameGeneratorDigit++) } window._SESHR_._HADUSEDNAMES_[a] = a; return "_SE_AJAX_" + a }; EV.ServiceSH = function () { EV.ServiceSH.REAL_TO_ENCRYPT = 1; EV.ServiceSH.ENCRYPT_TO_REAL = 2; EV.ServiceSH.BAIDU_TO_ENCRYPT = 3; EV.ServiceSH.MERCATOR_TO_ENCRYPT = 4; this.shift = function (a, d) { var b, c = []; if (a.points) { if (a.points instanceof Array) { for (var e = [], f = EV.ServiceConstants.NUBMER_TO_LNGLAT, h = 0; h < a.points.length; h++) { b = a.points[h], e.push(b.getLng() / f + "," + b.getLat() / f) } b = e.join(";") } else { b = a.points } c.push("points=" + b) } else { throw "Sorroy,your lnglats data that need to transport is null!" } b = EV.ServiceSH.REAL_TO_ENCRYPT; a.type && (!isNaN(a.type) && parseInt(a.type)) && (b = a.type); b == EV.ServiceSH.REAL_TO_ENCRYPT ? c.push("st=SE_SH") : b == EV.ServiceSH.ENCRYPT_TO_REAL && c.push("st=SE_RSH"); a.show && c.push("show=" + a.show); c.push("output=json"); c.push("uid=" + window.__UID__); var l = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[l] = {}; window._SESHR_[l]._c = d; window._SESHR_[l].HR = function (a) { this._c && this._c(a); window._SESHR_[l] = null }; c.push("callback=window._SESHR_." + l + ".HR"); c = getRandomServer() + EV.ServiceConstants.Urls.sh + "?" + c.join("&"); EV.ServiceUtils.ajaxRequest(c); return this } }; window.REAL_TO_ENCRYPT = EV.ServiceSH.REAL_TO_ENCRYPT; window.ENCRYPT_TO_REAL = EV.ServiceSH.ENCRYPT_TO_REAL; window.BAIDU_TO_ENCRYPT = EV.ServiceSH.BAIDU_TO_ENCRYPT; window.MERCATOR_TO_ENCRYPT = EV.ServiceSH.MERCATOR_TO_ENCRYPT; EV.ServiceGC = function () {
    this.gcEncoding = function (a, d) { var b = []; if (a.address) { b.push("address=" + encodeURIComponent(a.address.addr)), b.push("city=" + encodeURIComponent(a.address.city)) } else { throw "Sorroy,your address is null!" } var c = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[c] = {}; window._SESHR_[c]._c = d; window._SESHR_[c].HR = function (a) { this._c && this._c(a); window._SESHR_[c] = null }; b.push("callback=window._SESHR_." + c + ".HR"); b.push("st=Geocoding"); b.push("output=json"); b.push("uid=" + window.__UID__); b = getRandomServer() + EV.ServiceConstants.Urls.gc.concat("?").concat(b.join("&")); EV.ServiceUtils.ajaxRequest(b) }; this.rgcEncoding = function (a, d) {
        var b, c = []; b = EV.ServiceConstants.NUBMER_TO_LNGLAT;
        var e = a.location; if (e) { b = e.getLng() / b + "," + e.getLat() / b, c.push("point=" + b) } else { throw "Sorroy,your point is null!" } !1 === a.encrypted && c.push("encrypted=false"); b = parseInt(a.course); isNaN(b) || 0 <= b && 3599 >= b && c.push("course=" + b); b = parseInt(a.type); if (!isNaN(b)) { switch (b) { case 10: c.push("type=10"); break; case 11: c.push("type=11"); break; default: c.push("type=1") } } if (d) { var f = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[f] = {}; window._SESHR_[f]._c = d; window._SESHR_[f].HR = function (a) { this._c && this._c(a); window._SESHR_[f] = null }; c.push("callback=window._SESHR_." + f + ".HR") } a.encoding && "gbk" === a.encoding && c.push("encoding=gbk"); c.push("st=Rgc2"); c.push("output=json"); c.push("uid=" + window.__UID__); c = getRandomServer() + EV.ServiceConstants.Urls.rgc.concat("?").concat(c.join("&")); EV.ServiceUtils.ajaxRequest(c)
    }
}; EV.ServiceLS = function () { function a(a, b) { if (EV.ServiceUtils.isEmpty(b.city)) { throw "Sorry,your city is null!" } a.push("city=" + encodeURIComponent(b.city)); EV.ServiceUtils.isEmpty(b.keyword) || a.push("words=" + encodeURIComponent(b.keyword)); b.pageinfo && (b.pageinfo.page && EV.ServiceUtils.isNumber(b.pageinfo.page) && a.push("page=" + b.pageinfo.page), b.pageinfo.number && EV.ServiceUtils.isNumber(b.pageinfo.number) && a.push("pagecap=" + b.pageinfo.number)); b.policy && (b.policy.matchType && EV.ServiceUtils.isNumber(b.pageinfo.matchType) && a.push("output=" + b.pageinfo.matchType), b.policy.sortType && EV.ServiceUtils.isNumber(b.pageinfo.sortType) && a.push("sorttype=" + b.pageinfo.sortType)) } function d(a, b, c) { f._lscallback = c; 0 == b[b.length - 1].indexOf("lsid=") ? b.push("st=Obtain") : b.push("st=LocalSearch"); var d = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[d] = {}; window._SESHR_[d]._c = c; window._SESHR_[d].HR = function (a) { a && a.result && (!a.result.points && a.result.point) && (a.result.points = [a.result.point]); f._lsdata = a; this._c && this._c(a); window._SESHR_[d] = null }; b.push("callback=window._SESHR_." + d + ".HR"); b.push("output=json"); b.push("uid=" + window.__UID__); a = a.concat("?").concat(b.join("&")); EV.ServiceUtils.ajaxRequest(a) } function b(a) { for (var b = [], c = 0; c < a.length; c++) { b.push(a[c].join(" ")) } return b.join(",") } function c(a) { for (var c = [], d = 0; d < a.length; d++) { c.push(b(a[d])) } return "(" + c.join("),(") + ")" } function e(a, d) { var m = ""; switch (d) { case 1: m = a; break; case 2: m = "POINT(" + a.join(" ") + ")"; break; case 3: m = "CIRCLE(" + a.join(" ") + ")"; break; case 4: m = "RECT(" + b(a) + ")"; break; case 5: m = "LINESTRING(" + b(a) + ")"; break; case 6: m = "MULTILINESTRING(" + c + ")"; break; case 7: m = "POLYGON(" + b(a) + ")"; break; case 8: m = "MULTIPOLYGON(" + c(a) + ")"; break; case 9: if (3 > arguments.length) { for (var m = [], f = 0; f < a.length; f++) { m.push(e(a[f].range, a[f].wtkType, !0)) } m = "GEOMETRYCOLLECTION(" + m.join(",") + ")" } } return encodeURIComponent(m) } EV.ServiceLS.WTK_TYPE_STRING = 1; EV.ServiceLS.WTK_TYPE_POINT = 2; EV.ServiceLS.WTK_TYPE_CIRCLE = 3; EV.ServiceLS.WTK_TYPE_RECT = 4; EV.ServiceLS.WTK_TYPE_LINE = 5; EV.ServiceLS.WTK_TYPE_MULTI_LINE = 6; EV.ServiceLS.WTK_TYPE_PLOYGON = 7; EV.ServiceLS.WTK_TYPE_MULTI_PLOYGON = 8; EV.ServiceLS.WTK_TYPE_COLLECTION = 9; this._lsRequest = this._lsdata = this._lscallback = null; var f = this; this.renderer = function (a, b, c) { var d = this, e = c, f = setInterval(function () { if (e) { clearInterval(f); var c = new EV.ServiceLSRendererOptions(a, b, e); (new EV.ServiceLSRenderer(d)).renderer(c) } else { e = d._lsdata } }, EV.ServiceConstants.TIME_INTERVAL_LS) }; this.localSearchKeyword = function (b, c) { var e = []; a(e, b); d(getRandomServer() + EV.ServiceConstants.Urls.ls, e, c) }; this.localSearchClass = function (b, c) { var e = []; a(e, b); EV.ServiceUtils.isEmpty(b.lsclass.classid) || e.push("class=" + b.lsclass.classid); d(getRandomServer() + EV.ServiceConstants.Urls.ls, e, c) }; this.localSearchArea = function (b, c) { var f = []; a(f, b); with (b.area) { range && (wtkType ? f.push("area=" + e(range, wtkType)) : f.push("area=" + range)), radius && EV.ServiceUtils.isNumber(radius) && f.push("radius=" + radius) } d(getRandomServer() + EV.ServiceConstants.Urls.ls, f, c) }; this.localSearchID = function (b, c) { var e = []; a(e, b); e.push("lsid=" + b.lsid); d(getRandomServer() + EV.ServiceConstants.Urls.ls, e, c) }; this.search = function (a, b) { if (a) { a.area ? this.localSearchArea(a, b) : a.lsclass ? this.localSearchClass(a, b) : a.lsid ? this.localSearchID(a, b) : this.localSearchKeyword(a, b), this._lsRequest = a } else { throw "Sorry,your request is null!" } } }; EV.ServiceLSRenderer = function (a) {
    var d = EV.ServiceUtils.isIE6(), b = null, c = EV.ServiceConstants.IMG_URL, e = c + "/img/info/", c = c + "/img/info/"; EV.ServiceLSRenderer.tips_defs = []; EV.ServiceLSRenderer.tips_sels = []; for (var f = new EV.Size(20, 34), h = 1; 11 > h; h++) { EV.ServiceLSRenderer.tips_defs.push(e + h + ".png"), EV.ServiceLSRenderer.tips_sels.push(c + h + ".png") } EV.ServiceLSRenderer.pageTo = function (c) { a && (a._lsRequest.pageinfo.page = c, a.search(a._lsRequest, a._lscallback), a.renderer(b.map, b.panel)) }; this.renderer = function (c) {
        if (c) {
            b = c; var e = c.result; if (!e) { throw "NO result exception!" } var h = [], g = [], o = [], z = ["#99CCFF", "#6699FF"], u, v, B = function (a, b) { c.map && g[a].setIconImage(b ? EV.ServiceLSRenderer.tips_sels[a] : EV.ServiceLSRenderer.tips_defs[a], f) }, n = function (a, b, c) {
                if (o[a] && (o[a].style.background = b, a = o[a].getElementsByTagName("IMG")[0])) {
                    a.src = c, d && EV.ServiceUtils.handleFilterPNG(a)
                }
            }, I = function () { var a = null, a = 0 < arguments.length && parseInt(0 == arguments[0] ? 1 : arguments[0]) ? arguments[0] : this.id; if (u != a) { a = parseInt(a); if (u || 0 == u) { n(u, "", EV.ServiceLSRenderer.tips_defs[u]), B(u, !1) } u = a; var b = c.map; b.layerInfowin ? (b.removeOverLay(b.layerInfowin), b.layerInfowin.setLngLat(g[a].getLngLat())) : b.layerInfowin = new EV.InfoWindow(g[a].getLngLat()); g[a].mname && b.layerInfowin.setTitle('<div class="metadata_info">' + g[a].mname + "</div>"); var e = ""; g[a].maddress && (e = g[a].maddress + "<br/>"); g[a].mtelphone && (e = e + "\u7535\u8bdd: " + g[a].mtelphone); b.layerInfowin.setLabel(e); b.addOverLay(b.layerInfowin); b.layerInfowin.moveToShow(); b.layerInfowin.setOffset(new EV.Point(0, -35)); n(a, z[1], EV.ServiceLSRenderer.tips_sels[a]); B(a, !0) } }, J = function () { var a = null, a = 0 < arguments.length && parseInt(0 == arguments[0] ? 1 : arguments[0]) ? arguments[0] : this.id; if (!(u && u == a)) { a = parseInt(a); if (v || 0 == v) { n(v, "", EV.ServiceLSRenderer.tips_defs[v]), B(v, !1) } if (u || 0 == u) { n(u, z[1], EV.ServiceLSRenderer.tips_sels[u]), B(u, !0) } v = a; n(v, z[0], EV.ServiceLSRenderer.tips_sels[v]); B(v, !0) } }, K = function (a) { var b = [], c = parseInt(a.result.curpage, 10), a = parseInt(a.result.total / 10, 10) + (0 < a.result.total % 10 ? 1 : 0), a = 10 < a ? 10 : a, c = c > a ? a : 1 > c ? 1 : c; if (1 < a) { var e = 1 > c - 1 ? 1 : c - 1, d = c + 1 > a ? a : c + 1; 3 <= a ? (3 > d && (d = 3), d == a && (e = d - 3 + 1)) : (e = 1, d = a); 1 < c && (b.push('<a href="javascript:void(0)" onclick="EV.ServiceLSRenderer.pageTo(1)">&#171;&nbsp;\u9996\u9875</a>'), b.push('<a href="javascript:void(0)" onclick="EV.ServiceLSRenderer.pageTo(' + (c - 1) + ')">&#171;&nbsp;\u4e0a\u9875</a>&nbsp;')); for (; e <= d; e++) { b.push("<a " + (c == e ? 'class="current" ' : "") + 'href="javascript:void(0)" onclick="EV.ServiceLSRenderer.pageTo(' + e + ')">' + e + "</a>") } c < a && (b.push('&nbsp;<a href="javascript:void(0)" onclick="EV.ServiceLSRenderer.pageTo(' + (c + 1) + ')">\u4e0b\u9875&nbsp;&#187;</a>'), b.push('<a href="javascript:void(0)" onclick="EV.ServiceLSRenderer.pageTo(' + a + ')">\u672a\u9875&nbsp;&#187;</a>')) } return b.join("") }; if (c.map) { c.map.clearOverLays(); for (var q = 0; q < e.result.points.length; q++) { var s = e.result.points[q]; h.push(new EV.LngLat(s.lng, s.lat)); g.push(new EV.Marker(h[q], new EV.Icon(EV.ServiceLSRenderer.tips_defs[q], f))); g[q].id = q; g[q].mname = s.name || ""; var p = s.address; g[q].maddress = p ? p : s.district_text ? s.district_text : ""; g[q].mtelphone = s.telephone || ""; c.map.addOverLay(g[q]); EV.Event.addListener(g[q], "mouseover", J); EV.Event.addListener(g[q], "click", I) } q = a._lsRequest; s = !0; q && q.area && q.area.wtkType == WTK_TYPE_RECT && (s = !1); s && c.map.getBestMap(h, 40) } if (c.panel) { h = c.panel; "string" == typeof c.panel && (h = document.getElementById(c.panel)); h.style.overflow = "auto"; var r = []; r.push('<div id="result_topic">'); r.push("\u5171\u6709<b>" + e.result.total + "</b>\u4e2a\u7ed3\u679c\uff0c\u8017\u65f6" + e.result.time); r.push("</div>"); r.push('<div id="poi_list">'); for (var k = e.result.points.length, w = 0, q = 0; q < k; q++) { s = e.result.points[q], r.push('<table  class="tab" id="tab' + q + '">'), r.push('<tr><td class="index"><img class="png_img" src="' + EV.ServiceLSRenderer.tips_defs[q] + '"/></td>'), (p = s.name) && "" != p && r.push('<td class="tabname"><a id="tabname' + q + '" href="javascript:void(0)">' + p + "</a></td>"), r.push("<td></td></tr>"), (p = s.address) && "" != p && r.push('<tr><td class="index"></td><td colspan="2" class="address">' + p + "</tr>"), (s = s.telephone) && "" != s && r.push('<tr><td class="index"></td><td colspan="2" class="contact">\u7535\u8bdd\uff1a' + s + "</td></tr>"), r.push("</table>"), w++ } r.push("</div>"); r.push('<div id="pagination">'); r.push(K(e)); r.push("</div>"); h.innerHTML = r.join(""); EV.ServiceUtils.filterPNG("png_img"); for (q = 0; q < w; q++) { o.push(document.getElementById("tab" + q)), o[q].onmouseover = function () { J(this.id.substring(3)) }, o[q].onclick = function () { I(this.id.substring(3)) } } }
        }
    }
}; EV.ServiceLSRendererOptions = function (a, d, b) { this.map = a; this.panel = d; this.result = b }; window.WTK_TYPE_STRING = EV.ServiceLS.WTK_TYPE_STRING; window.WTK_TYPE_POINT = EV.ServiceLS.WTK_TYPE_POINT; window.WTK_TYPE_CIRCLE = EV.ServiceLS.WTK_TYPE_CIRCLE; window.WTK_TYPE_RECT = EV.ServiceLS.WTK_TYPE_RECT; window.WTK_TYPE_LINE = EV.ServiceLS.WTK_TYPE_LINE; window.WTK_TYPE_MULTI_LINE = EV.ServiceLS.WTK_TYPE_MULTI_LINE; window.WTK_TYPE_PLOYGON = EV.ServiceLS.WTK_TYPE_PLOYGON; window.WTK_TYPE_MULTI_PLOYGON = EV.ServiceLS.WTK_TYPE_MULTI_PLOYGON; window.WTK_TYPE_COLLECTION = EV.ServiceLS.WTK_TYPE_COLLECTION; EV.ServiceUtils.PolylineUtil = {
    map: null, centerPoint: null, zoom: null, size: null, distance: [0, 0, 0, 5000, 2000, 1000, 500, 200, 150, 90, 40, 20, 8, 5, 3, 2, 2, 1], init: function (a, d, b) { a && (this.map = a, this.centerPoint = new EV.LngLat(d.getLng(), d.getLat()), this.zoom = b, this.viewSize = [a.viewSize[0], a.viewSize[1]]) }, getDistance: function (a) { return this.distance[a ? a - 1 : this.zoom - 1] }, fromContainerPixelToLngLat: function (a) { var d = this.map.getZoomUnits(this.zoom, !0), b = this.centerPoint; return new EV.MercatorLngLat(b.getMercatorLongitude() + d[0] * (a[0] - this.viewSize[0] / 2), b.getMercatorLatitude() - d[1] * (a[1] - this.viewSize[1] / 2)) }, fromLngLatToContainerPixel: function (a) {
        var d = this.map.getZoomUnits(this.zoom, !0), b = this.centerPoint, a = [Math.round((a.getMercatorLongitude() - b.getMercatorLongitude()) / d[0] + this.viewSize[0] / 2), Math.round((b.getMercatorLatitude() - a.getMercatorLatitude()) / d[1] + this.viewSize[1] / 2)];
        return new EV.Point(a[0], a[1])
    }, closestLayerPoint: function (a, d) { for (var b = Infinity, c, e, f = null, h = 1, l = a.length; h < l; h++) { c = a[h - 1], e = a[h], c = this._sqClosestPointOnSegment(d, c, e), c[0] < b && (b = c[0], f = new EV.Point(c[1], c[2])) } f && (f.distance = Math.sqrt(b)); return f }, _sqClosestPointOnSegment: function (a, d, b) { var c = d.x, d = d.y, e = b.x - c, f = b.y - d, h = e * e + f * f; 0 < h && (h = ((a.x - c) * e + (a.y - d) * f) / h, 1 < h ? (c = b.x, d = b.y) : 0 < h && (c += e * h, d += f * h)); e = a.x - c; f = a.y - d; return [e * e + f * f, c, d] }
}; EV.ServiceRC = function () {
    function a(a, c, e) { var d = [], f = EV.ServiceConstants.NUBMER_TO_LNGLAT; if (a.start) { d.push("start=" + a.start.getLng() / f + "," + a.start.getLat() / f) } else { throw "Sorry,the start point can not be null!" } if (a.end) { d.push("end=" + a.end.getLng() / f + "," + a.end.getLat() / f) } else { throw "Sorry,the end point can not be null!" } if (a.waypoints && 0 < a.waypoints.length) { var g = a.waypoints.length, n = EV.ServiceConstants.RC_MAX_WAY_POINTS_NUMBER; if (g > n) { throw "Sorry,the number of waypoints must be less than " + n + "!" } for (var h = [], m = 0; m < g; m++) { n = a.waypoints[m], h.push(n.getLng() / f + "," + n.getLat() / f) } d.push("waypoint=" + h.join(";")) } a.type && d.push("type=" + a.type); a.realtraffic && d.push("tmc=" + a.realtraffic); var l = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[l] = {}; window._SESHR_[l]._c = c; window._SESHR_[l].HR = function (a) { try { if (a && a.result) { var c = a.result.route.routetxt; if (c) { for (var e = []; 0 < c.length;) { lng = c.substring(0, 5), lat = c.substring(5, 10), lng = parseInt(lng, 36) / 100000, lat = parseInt(lat, 36) / 100000, e.push({ lng: lng, lat: lat }), c = c.substring(10) } a.result.route.points = e } } b._rcdata = a; this._c && this._c(a) } catch (d) { } window._SESHR_[l] = null }; d.push("callback=window._SESHR_." + l + ".HR"); d.push("st=RC"); d.push("output=json"); d.push("uid=" + window.__UID__); c = getRandomServer() + EV.ServiceConstants.Urls.rc.concat("?").concat(d.join("&")); EV.ServiceUtils.ajaxRequest(c); e._rcRequest = a } function d(a, b, c, e, d, f) { a.search(c); var g = setInterval(function () { a._lsdata && (clearInterval(g), d ? b._end_data = a._lsdata : b._start_data = a._lsdata, f && (b._start_data && b._end_data) && f(b._start_data, b._end_data)) }, EV.ServiceConstants.TIME_INTERVAL_RC) } this._end_data = this._start_data = this._end = this._start = this._lsRequest = this._rcRequest = this._rcdata = this._rccallback = null; this._enable_dragging = !1; this._waypoints = []; var b = this; this._reset_service = function () { this._end_data = this._start_data = this._end = this._start = this._lsRequest = this._rcRequest = this._rcdata = this._rccallback = null }; this.rendererRC = function (a, b, c) { var e = this, d = c, f = setInterval(function () { if (d) { clearInterval(f); var c = new EV.ServiceRCRendererOptions(a, b, d); (new EV.ServiceRCRenderer(e)).rendererRC(c) } else { d = e._rcdata } }, EV.ServiceConstants.TIME_INTERVAL_RC) }; this.route = function (b, c) { if (b) { if (b.start) { if (b.end) { if (this._reset_service(), !0 === b.enableDragging && (this._enable_dragging = !0), b.start.city || b.start.keyword || b.end.city || b.end.keyword) { rc.searchLS({ start: { city: b.start.city, keyword: b.start.keyword }, end: { city: b.end.city, keyword: b.end.keyword } }); var e = this, d = setInterval(function () { if (e._start_data && e._end_data) { clearInterval(d); var f = e._end_data.result.points[0].lng, g = e._end_data.result.points[0].lat; e._start = new EV.LngLat(e._start_data.result.points[0].lng, e._start_data.result.points[0].lat); e._end = new EV.LngLat(f, g); b.start = e._start; b.end = e._end; a(b, c, e) } }, EV.ServiceConstants.TIME_INTERVAL_RC) } else { a(b, c, this) } } else { throw "Sorry,the end point can not be null!" } } else { throw "Sorry,the start point can not be null!" } } else { throw "Sorry,your request is null!" } }; this.searchLS = function (a, b) { if (a) { if (a.start) { if (a.end) { var c = this; c._lsRequest = a; var e = new EV.ServiceLS, f = { city: a.start.city, keyword: a.start.keyword, pageinfo: { page: 1, number: 10 }, policy: { matchType: 2, sortType: 0 } }, g = { map: a.map, panel: a.divContainer }; d(e, c, f, g, !1, b); var n = setInterval(function () { e._lsdata && c._start_data && (clearInterval(n), e._lsdata = null, f.city = a.end.city, f.keyword = a.end.keyword, d(e, c, f, g, !0, b)) }, EV.ServiceConstants.TIME_INTERVAL_RC) } else { throw "Sorry,your end is null!" } } else { throw "Sorry,your start is null!" } } else { throw "Sorry,your request is null!" } }; this.rendererLS = function (a, b) { var c = this, e = setInterval(function () { if (c._start_data && c._end_data) { clearInterval(e); var d = new EV.ServiceRCRendererOptions(a, b); (new EV.ServiceRCRenderer(c)).rendererLS(d) } }, EV.ServiceConstants.TIME_INTERVAL_RC) }; var c = EV.ServiceUtils.PolylineUtil; this.isdraging_waypoint = -1; this.isdraging_waypoint_m = null; var e = !1, f = null, h = [], l = [], m = [], C = [], g = null, o = 0, z = 50, u = !1, v = (new Date).getTime(), B = null; this.waypoints_markers = []; this.waypoints_pointoverlays = []; this.waypoints_pointoverlays_desc = [[[30, 0], "\u62d6\u52a8\u4ee5\u66f4\u6539\u8def\u7ebf"], [[5, 8], "\u5220\u9664\u8be5\u70b9"]]; var n = null; this.temp_m_icon = null; this.clearWayPoints = function () { if (n) { var a = this.waypoints_markers.length; if (0 != a) { for (var b = 0; b < a; b++) { n.removeOverLay(this.waypoints_markers[b]), n.removeOverLay(this.waypoints_pointoverlays[b]) } } } }; this.handleEnableDragging = function (a) {
        function b() { o = this.id } function d(a) { 1 == o ? j.start = a : 2 == o && (j.end = a); o = 0; k.route(j); k.rendererRC(n, E) } function q(a) {
            u && (e = !0, k.isdraging_waypoint_m = null, j.waypoints || (j.waypoints = []), a = n.fromContainerPixelToLngLat(a), j.waypoints.push(a), k.isdraging_waypoint = j.waypoints.length - 1, g.disableMassClear())
        } function s() { e = !1; y && (0 <= k.isdraging_waypoint && y[k.isdraging_waypoint]) && y[k.isdraging_waypoint].show(); g && g.enableMassClear(); k.isdraging_waypoint = -1; setTimeout(function () { g && g.enableMassClear(); n.removeOverLay(g); g = null; if (y && 0 < y.length && j.waypoints && 0 < j.waypoints.length) { var a = j.waypoints[j.waypoints.length - 1]; y[y.length - 1].setLngLat(a); k.waypoints_pointoverlays[k.waypoints_pointoverlays.length - 1].setLngLat(a) } }, 100) } function p() { u = !1; g.div.style.display = "none"; g._has_add_ = !1 } function r(a) { if (F && !(4 > n.getCurrentZoom())) { var b = n.fromContainerPixelToLngLat(a); if (e) { if (j.waypoints && 0 < j.waypoints.length) { var d = [a[0] - parseInt(n.mapsDiv.style.left), a[1] - parseInt(n.mapsDiv.style.top)]; (a = k.isdraging_waypoint_m) ? (g && (g.div.style.display = "none"), a.hasDrag = !0, a.div.style.left = d[0] - A[0] + "px", a.div.style.top = d[1] - A[1] + "px", a.lng = b.getLng(), a.lat = b.getLat(), d = a._wid, a = new EV.LngLat(b.getLng(), b.getLat()), a._wid = j.waypoints[d]._wid, a.hasAdded = j.waypoints[d].hasAdded, j.waypoints[d] = a, k.waypoints_pointoverlays[d].setLngLat(b)) : (a = j.waypoints.length - 1, y && y[a] && y[a].hide(), g.div.style.left = d[0] - A[0] + "px", g.div.style.top = d[1] - A[1] + "px", g.point.lng = b.getLng(), g.point.lat = b.getLat(), b = new EV.LngLat(b.getLng(), b.getLat()), b._wid = j.waypoints[a]._wid, b.hasAdded = j.waypoints[a].hasAdded, j.waypoints[a] = b); v = EV.Tool.dateTime(); B || (B = setTimeout(function () { k.route(j); k.rendererRC(n, E); B = null }, z)) } } else { if (!(25 > EV.Tool.dateTime() - v)) { v = EV.Tool.dateTime(); if (0 == h.length) { h = []; for (var f = F.getLngLats(), d = 0; d < f.length; d++) { h.push(c.fromLngLatToContainerPixel(f[d])) } l = []; l.push(h[0]); l.push(h[h.length - 1]); if (j.waypoints && 0 < j.waypoints.length) { for (d = 0; d < j.waypoints.length; d++) { l.push(c.fromLngLatToContainerPixel(j.waypoints[d])) } } } var f = c.fromLngLatToContainerPixel(b), w = c.closestLayerPoint(h, f); if (w) { if (w.distance < c.getDistance(n.zoom)) { if (u = !0, g) { for (var r = !1, d = 0; d < l.length; d++) { var x = l[d].x - f.x, o = l[d].y - f.y; if (Math.sqrt(x * x + o * o) < c.getDistance(n.zoom)) { r = !0; break } } r ? p() : (e ? g.point = b : (b = c.fromContainerPixelToLngLat(w), g.point = b, a = n.fromLngLatToContainerPixel(b)), d = [a[0] - parseInt(n.mapsDiv.style.left), a[1] - parseInt(n.mapsDiv.style.top)], g.div.style.left = d[0] - A[0] + "px", g.div.style.top = d[1] - A[1] + "px", g.div.style.display = "", g._has_add_ = !0) } else { g = new EV.Marker(b, k.temp_m_icon), g._offset_false = !0, g._has_add_ = !0, g.disableMassClear(), n.addOverLay(g), H = g.getSize(), A = [H.width * g.anchorPer[0] - g.offset.x, H.height * g.anchorPer[1] - g.offset.y], m.push(EV.Event.addListener(g, "mousedown", q)), m.push(EV.Event.addListener(g, "mouseup", s)) } } else { g && p() } } else { g && p() } } } } } var k = this; if (e) { clearTimeout(f), f = setTimeout(function () { k.handleEnableDragging(a) }, 110) } else {
            n || (n = a.map); k.temp_m_icon || (k.temp_m_icon = new EV.Icon(EV.ServiceConstants.IMG_URL + "/img/service/marker_drag.png", new EV.Size(18, 18))); for (var w = 0; w < m.length; w++) { EV.Event.removeListener(m[w]) } m = []; var E = a.panel, F = a.rc_line, w = a.start_marker, G = a.end_marker, y = a.waypoints_markers; h = []; l = []; var H = { width: 18, height: 18 }, A = [0, 0], j = k._rcRequest; c.map || c.init(n, F.getCenterPoint(), n.getBestZoom(F.bounds)); s(); if (k._enable_dragging) {
                w.enableDrag(); G.enableDrag(); m.push(EV.Event.addListener(w, "mouseover", b)); m.push(EV.Event.addListener(G, "mouseover", b)); m.push(EV.Event.addListener(w, "dragend", d)); m.push(EV.Event.addListener(G, "dragend", d)); m.push(EV.Event.addListener(n, "mousemove", r)); for (w = 0; w < y.length; w++) {
                    var x = y[w]; x.addevents || (x.addevents = !0, C.push(EV.Event.addListener(x, "mousedown", function () { e = true; k.isdraging_waypoint = this._wid; k.isdraging_waypoint_m = this })), C.push(EV.Event.addListener(x, "mouseup", function () { e = false; k.isdraging_waypoint = -1; setTimeout(function () { k.isdraging_waypoint_m = null }, 300); if (this.hasDrag) { this.hasDrag = false; var a = this.getLngLat(); j.waypoints[this._wid].lng = a.getLng(); j.waypoints[this._wid].lat = a.getLat(); k.route(j); k.rendererRC(n, E) } })), C.push(EV.Event.bind(x.div, "mouseover", x, function () { if (!this._isdelmode) { var a = k.waypoints_pointoverlays[this._wid]; if (a) { a.setLabel(k.waypoints_pointoverlays_desc[0][1]); a.setOffset(k.waypoints_pointoverlays_desc[0][0]); a.setVisible(true) } } })), C.push(EV.Event.bind(x.div, "mouseout", x, function () { if (!this._isdelmode) { var a = k.waypoints_pointoverlays[this._wid]; a && a.setVisible(false) } })), C.push(EV.Event.addListener(x, "click", function (a, b) {
                        if (b == 2) {
                            this._isdelmode = true; var c = this._wid, d = k.waypoints_pointoverlays[c]; if (d) {
                                var e = "_SE_RC_DEL_" + EV.Tool.dateTime(); d.setLabel('<div id="' + e + '" style="cursor:pointer;">' + k.waypoints_pointoverlays_desc[1][1] + "</div>"); d.setOffset(k.waypoints_pointoverlays_desc[1][0]); d.setVisible(true); b = document.getElementById(e); b.onmouseout = function (a) { x._isdelmode = false; EV.Event.trigger(x.div, "mouseout", [a]) }; b.onclick = function () {
                                    n.removeOverLay(y[c]); n.removeOverLay(k.waypoints_pointoverlays[c]); for (var a = j.waypoints.length, b = [], d = [], e = [], f = 0; f < c; f++) { b.push(y[f]); d.push(k.waypoints_pointoverlays[f]); e.push(j.waypoints[f]) } for (f = c + 1; f < a; f++) {
                                        y[f]._wid = y[f]._wid - 1; k.waypoints_pointoverlays[f]._wid = k.waypoints_pointoverlays[f]._wid - 1;
                                        j.waypoints[f]._wid = j.waypoints[f]._wid - 1; b.push(y[f]); d.push(k.waypoints_pointoverlays[f]); e.push(j.waypoints[f])
                                    } k.waypoints_markers = b; k.waypoints_pointoverlays = d; j.waypoints = e; k.route(j); k.rendererRC(n, E)
                                }
                            }
                        }
                    })))
                }
            }
        }
    }
}; EV.ServiceRCRenderer = function (a) {
    function d(b) { if (b) { var c = b.result; if (!c) { throw "NO result exception!" } var d = function (c) { var d = new EV.LngLat(o[c].lng, o[c].lat); d.name = o[c].name; c >= u[0] ? (b.map.removeOverLay(z[1]), marker = new EV.Marker(d, C), z[1] = marker, a._end = d, v[1] = c) : (b.map.removeOverLay(z[0]), marker = new EV.Marker(d, m), z[0] = marker, a._start = d, v[0] = c); b.map.addOverLay(marker); b.map.setCenter(d, 12) }, e = 10 < c.result.points.length ? 10 : c.result.points.length; u.push(e); for (var f = 0; f < e; f++) { o.push(c.result.points[f]) } if (b.panel) { var s = b.panel; "string" == typeof b.panel && (s = document.getElementById(b.panel)); var p = []; p.push('<div id="search_result">'); p.push('<div class="bus_result" id="bus_change">'); p.push('<div class="select_prompt">'); p.push('<table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="img">'); p.push('<img class="png_img_2" src="' + (g ? l : h) + '"/></td><td class="txt"><div>'); p.push('<p id="spoint_name">' + (g ? a._lsRequest.end.city + "&gt;" + a._lsRequest.end.keyword : a._lsRequest.start.city + "&gt;" + a._lsRequest.start.keyword) + "</p></div></td></tr></tbody></table></div>"); p.push('<div id="select_spoint" class="select_point_box">'); p.push("<ul>"); e = o.length - e; v = [0, e]; var f = 0, r = !0; for (g && (f = e) ; f < o.length;) { p.push('<li id="se_rc_renderer_tab' + f + '"    style="background:' + (r ? '#e6f1fa;"' : "") + ';">'), p.push('<a href="javascript:void(0)">' + o[f].name + "</a></li>"), r = !1, f++ } p.push("</div><ul>"); p.push("</div>"); p.push("</div>"); s.innerHTML = g ? s.innerHTML + p.join("") : p.join(""); for (var k = function (a, b) { var c = parseInt(a.substring(18)); if (c == v[0] || c == v[1]) { return !1 } switch (b) { case 0: c >= u[0] ? (document.getElementById("se_rc_renderer_tab" + v[1]).style.background = "", v[1] = c) : (document.getElementById("se_rc_renderer_tab" + v[0]).style.background = "", v[0] = c); d(c); break; case 1: document.getElementById(a).style.background = "#e6f1fa"; break; case 2: document.getElementById(a).style.background = "" } }, f = 0; f < o.length; f++) { if (s = document.getElementById("se_rc_renderer_tab" + f)) { s.onclick = function () { k(this.id, 0) }, s.onmouseover = function () { k(this.id, 1) }, s.onmouseout = function () { k(this.id, 2) } } } } b.map && "ok" == c.status && (g || b.map.clearOverLays(), 0 < c.result.points.length && d(g ? u[0] : 0)); EV.ServiceUtils.filterPNG("png_img_2") } } var b = EV.ServiceConstants.IMG_URL, c = b + "/img/service/nav/turn/", e = [["\u7ee7\u7eed\u5411\u524d\u884c\u9a76", "0.png"], ["\u9053\u8def\u6ca1\u53d8\u5316", "1.png"], ["\u76f4\u884c", "1.png"], ["\u504f\u53f3\u8f6c", "2.png"], ["\u504f\u5de6\u8f6c", "3.png"], ["\u5de6\u8f6c", "4.png"], ["\u53f3\u8f6c", "5.png"], ["\u5de6\u540e\u65b9\u8f6c\u5f2f", "6.png"], ["\u53f3\u540e\u65b9\u8f6c\u5f2f", "7.png"], ["\u5de6\u5927\u8f6c", "6.png"], ["\u53f3\u5927\u8f6c", "7.png"], ["\u8c03\u5934", "8.png"], ["\u8f66\u5934\u6b63\u5317", "9.png"], ["\u8f66\u5934\u4e1c\u5317", "10.png"], ["\u8f66\u5934\u6b63\u4e1c", "11.png"], ["\u8f66\u5934\u4e1c\u5357", "12.png"], ["\u8f66\u5934\u6b63\u5357", "13.png"], ["\u8f66\u5934\u897f\u5357", "14.png"], ["\u6b63\u5317", "9.png"], ["\u4e1c\u5317", "10.png"], ["\u6b63\u4e1c", "11.png"], ["\u4e1c\u5357", "12.png"], ["\u6b63\u5357", "13.png"], ["\u897f\u5357", "14.png"], ["\u6b63\u897f", "15.png"], ["\u897f\u5317", "16.png"]], f = new EV.Size(20, 34), h = b + "/img/service/nav/nav_start.png", l = b + "/img/service/nav/nav_end.png", m = new EV.Icon(h, f), C = new EV.Icon(l, f); new EV.Icon("", f); var g = !1, o = [], z = [], u = [], v = [0, 0], B = new EV.Icon(b + "/img/service/point.png", new EV.Size(8, 8)); this.rendererLS = function (b) { b.result = a._start_data; d(b); g = !0; b.result = a._end_data; d(b) }; this.rendererRC = function (b) {
        if (b) {
            var d = b.result; if (!d || !d.result) { throw "NO result exception!" } var f = [], g = [], h = null, l = null, p = null, r = null, k = null, w = null, o = b.map, u = function (a) { var b = f[a]; if (isNaN(b.pid)) { a = 0 < a ? a - 1 : 0; f[a].pid && (a = f[a].pid); var c; a: { b.getLng(); for (b.getLat() ; a < g.length; a++) { if (100 > EV.GeoTool.getDistance(b, g[a])) { c = a; break a } } } b.pid = c } return b.pid }, v = function (a) { var b = u(a), a = u(a + 1); return g.slice(b, a) }, y = function (a, b, c, d) { a = new EV.PolyLine(a); a.setLineColor(b); a.setOpacity(c); a.setLineStyle(d); return a }, z = function (a) { var b = null, c = null, e = null; if (a || 0 == a) { b = a, c = d.result.events[b], e = new EV.LngLat(c.lng, c.lat) } else { return !1 } o.removeOverLay(h); l = null; h = new EV.InfoWindow; h.setWidth(280); h.setHeight(200); h.setLabel('<div id="rc_sub_map" style="width:270px;height:200px;"></div>'); h.setPoint(e); h.setTitle('<div class="">' + c.roadname + "</div>"); o.addOverLay(h); EV.Event.addListener(h, "close", function () { l = null }); o.panTo(e); h.moveToShow(); l || (l = new EV.Map("rc_sub_map"), l.handleMouseScroll(!0), l.addControl(new EV.MapControl(2)), l.addOverLay(y(g, "blue", 1, "ShortDash"))); l.centerAndZoom(e, 15); l.removeOverLay(p); b != f.length - 1 && (p = y(v(b), "#942490", 1, "ThinThin"), p.setLineStroke(4), p.setLineArrow("", "Block"), l.addOverLay(p)) }; with (d.result) {
                for (var A = events.length, j = 0; j < A; j++) {
                    f.push(new EV.LngLat(events[j].lng, events[j].lat))
                } if (d.result.route.points) { with (d.result.route) { g.push(f[0]); for (j = 0; j < points.length; j++) { g.push(new EV.LngLat(points[j].lng, points[j].lat)) } g.push(f[f.length - 1]) } } if (o) { o.clearOverLays(); r = new EV.Marker(f[0], m); r.id = 1; k = new EV.Marker(f[A - 1], C); k.id = 2; a._enable_dragging ? (w = y(g, "blue", 0.3, "solid"), w.setLineStroke(5)) : w = y(g, "blue", 1, "ShortDash"); w.div.style.cursor = "pointer"; o.addOverLay(r); o.addOverLay(k); o.addOverLay(w); var x = a._rcRequest; if (x.waypoints && 0 < x.waypoints.length) { for (j = 0; j < x.waypoints.length; j++) { var t = x.waypoints[j]; t._wid = j; if (t.hasAdded) { a.waypoints_markers[j].point.lng = t.lng, a.waypoints_markers[j].point.lat = t.lat, a.waypoints_markers[j].reDraw(!0), a.waypoints_pointoverlays[j].point.lng = t.lng, a.waypoints_pointoverlays[j].point.lat = t.lat, a.waypoints_pointoverlays[j].reDraw(!0) } else { var D = new EV.Marker(t, B); D._wid = j; D.disableMassClear(); o.addOverLay(D); a.waypoints_markers.push(D); t.hasAdded = !0; t = new EV.PointOverlay(new EV.LngLat(t.lng, t.lat)); t.setZIndex(1000); t.disableMassClear(); t.setLabel(a.waypoints_pointoverlays_desc[0][1]); t.setOffset(a.waypoints_pointoverlays_desc[0][0]); t.setVisible(!1); o.addOverLay(t); a.waypoints_pointoverlays.push(t) } } } o.getBestMap(g, 40) } if (b.panel) { x = b.panel; "string" == typeof b.panel && (x = document.getElementById(b.panel)); x.style.overflow = "auto"; t = []; t.push('<div id="poi_list">'); for (var L = [], D = function (a) { L.push(a); for (var b = 0; b < e.length; b++) { if (a == e[b][0]) { return e[b][1] } } return e[0][1] }, j = 0; j < A; j++) { t.push('<table  class="tab" id="se_rc_renderer_tab' + j + '">'), t.push('<tr style="line-height:25px;"><td class="index"><img title="' + events[j].turntype + '" class="se_rc_imgs" src="' + c + D(events[j].turntype) + '" /></td>'), t.push('<td class="tabname"><a id="tabname' + j + '" href="javascript:void(0)" style="color:#000;font-size:12px;font-weight:bold;">' + events[j].eventprompt + "</a></td>"), t.push("<td></td></tr>"), t.push("</table>") } t.push("</div>"); x.innerHTML = t.join(""); for (j = 0; j < A; j++) { if (x = document.getElementById("se_rc_renderer_tab" + j)) { document.getElementById("se_rc_renderer_tab" + j).onclick = function () { z(parseInt(this.id.substring(18))) } } } EV.ServiceUtils.filterPNG("se_rc_imgs") } a._enable_dragging && o && a.handleEnableDragging({ panel: b.panel, map: o, rc_line: w, start_marker: r, end_marker: k, waypoints_markers: a.waypoints_markers })
            }
        }
    }
}; EV.ServiceRCRendererOptions = function (a, d, b) { this.map = a; this.panel = d; this.result = b }; EV.ServiceIP = function () { this.locate = function (a, d) { var b = []; if (a.ip) { if (/^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$/.test(a.ip)) { b.push("ip=" + a.ip) } else { throw "IP address format error!" } } else { throw "Sorry,your ip address data that need to search is null!" } b.push("st=Ip"); b.push("output=json"); b.push("uid=" + window.__UID__); var c = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[c] = {}; window._SESHR_[c]._c = d; window._SESHR_[c].HR = function (a) { this._c && this._c(a); window._SESHR_[c] = null }; b.push("callback=window._SESHR_." + c + ".HR"); b = getRandomServer() + EV.ServiceConstants.Urls.ip + "?" + b.join("&"); EV.ServiceUtils.ajaxRequest(b) } }; EV.ServiceUtils.racDecodeBound = function (a) { for (var d = a.length, b = 0, c = [], e = 0, f = 0; b < d;) { var h, l = 0, m = 0; do { h = a.charCodeAt(b++) - 63, m |= (h & 31) << l, l += 5 } while (32 <= h); e += m & 1 ? ~(m >> 1) : m >> 1; m = l = 0; do { h = a.charCodeAt(b++) - 63, m |= (h & 31) << l, l += 5 } while (32 <= h); f += m & 1 ? ~(m >> 1) : m >> 1; c.push([0.00001 * e, 0.00001 * f]) } return c }; EV.ServiceUtils.racDecodeLevels = function (a) { var d = []; for (i = 0; i < a.length; i++) { d.push(80 - a.charCodeAt(i) + 1) } return d }; EV.ServiceUtils.racHandleData = function (a, d) { if (a && "ok" == a.status && a.result) { var b = a.result.bound, c = a.result.nodes, e = a.result.levels; if (b && c && e) { "string" == typeof c && (b = EV.ServiceUtils.racDecodeBound(b), c = EV.ServiceUtils.racDecodeBound(c), e = EV.ServiceUtils.racDecodeLevels(e), a.result.bound = b, a.result.nodes = c, a.result.levels = e); for (var f = [], h = 0; h < e.length; h++) { e[h] <= d && f.push(c[h]) } for (var c = [], e = f[0], h = [], l = 1, m = f.length; l < m; l++) { h.push(f[l]), f[l][0] == e[0] && f[l][1] == e[1] && (c.push(h), l + 1 < m && (e = f[++l], h = [])) } b = { status: "ok", result: { bound: b, contour: c, zoom: d } }; a.result.district && (b.result.district = a.result.district); a.result.district_text && (b.result.district_text = a.result.district_text); return b } } return a }; EV.ServiceRAC = function () {
    this.getBoundary = function (a, d) {
        var b = []; if (a.admincode) { if (/^[1-9]\d{5}$/.test(a.admincode)) { b.push("admincode=" + a.admincode) } else { throw "admincode format error!" } } else { throw "admincode is null!" } var c = a.zoom ? a.zoom : 12; if (this.lastcode && this.lastcode == a.admincode && this.lastdata) { d && (b = EV.ServiceUtils.racHandleData(this.lastdata, c), d(b)) } else {
            b.push("st=Rac"); b.push("output=json"); b.push("uid=" + window.__UID__); var e = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[e] = {}; window._SESHR_[e]._z = c; window._SESHR_[e]._s = this; window._SESHR_[e]._c = d; window._SESHR_[e].HR = function (a) {
                this._c && (a && ("ok" == a.status && a.result) && (this._s.lastdata = a), this._c(EV.ServiceUtils.racHandleData(a, this._z)));
                window._SESHR_[e] = null
            }; b.push("callback=window._SESHR_." + e + ".HR"); b = getRandomServer() + EV.ServiceConstants.Urls.rac + "?" + b.join("&"); EV.ServiceUtils.ajaxRequest(b); this.lastcode = a.admincode
        }
    }
}; EV.ServiceWeather = function () { this.getWeather = function (a, d) { var b = [], c = a.city; if (c) { "object" === typeof c && (c = c.getFLng() + "," + c.getFLat()), b.push("city=" + encodeURIComponent(c)) } else { throw "city is null!" } a.encoding && "gbk" === a.encoding && b.push("encoding=gbk"); b.push("output=json"); b.push("uid=" + window.__UID__); var e = EV.ServiceUtils.getGeneratorAJAXRequestName(); window._SESHR_[e] = {}; window._SESHR_[e]._c = d; window._SESHR_[e].HR = function (a) { this._c && this._c(a); null == window._SESHR_[e] }; b.push("callback=window._SESHR_." + e + ".HR"); b = getRandomServer() + EV.ServiceConstants.Urls.weather + "?" + b.join("&"); EV.ServiceUtils.ajaxRequest(b) } }; EV.ServiceWeather.weather_img = EV.ServiceConstants.IMG_URL + "/img/weather/"; EV.ServiceWeather.weather_img_b = EV.ServiceWeather.weather_img + "b/b#.gif"; EV.ServiceWeather.weather_img_m = EV.ServiceWeather.weather_img + "d/d#.gif"; EV.ServiceWeather.weather_img_s = EV.ServiceWeather.weather_img + "c/c#.gif";